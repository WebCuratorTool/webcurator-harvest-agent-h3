<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.webcurator</groupId>
	<artifactId>harvest-agent-h3</artifactId>
	<version>3.0.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>Harvest Agent - Heritrix 3.x</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

	<build>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0-alpha-1</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>${basedir}/build/local_config.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>jetty-filtered-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/filtered</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/src/main/webapp-filter</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-jetty-env</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>
								<resource>
									<directory>build/jetty</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<webResources>
						<resource>
							<!-- include the license file, as per the original build process -->
							<directory>docs</directory>
							<includes>
								<include>license.txt</include>
							</includes>
						</resource>
						<resource>
							<directory>${basedir}/src/main/webapp-filter</directory>
							<includes>
								<include>**/*</include>
							</includes>
							<filtering>true</filtering>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.4.15.v20190215</version>
				<configuration>
					<stopKey>${agent.stopKey}</stopKey>
					<stopPort>${agent.stopPort}</stopPort>
					<jettyXml>${project.build.directory}/jetty-jmx.xml</jettyXml>
					<webApp>
						<contextPath>/harvest-agent-h3</contextPath>
						<resourceBases>
							<resourceBase>${project.build.directory}/filtered</resourceBase>
							<resourceBase>src/main/webapp</resourceBase>
						</resourceBases>
					</webApp>
					<!--See https://www.eclipse.org/jetty/documentation/9.4.x/configuring-connectors.html
						Prior to Jetty 9, the type of the connector specified both the protocol and the implementation
						used. Jetty 9 has a single selector-based non-blocking I/O connector, and a collection of
						ConnectionFactories now configure the protocol on the connector. -->
					<httpConnector>
						<port>${agent.port}</port>
						<idleTimeout>60000</idleTimeout>
					</httpConnector>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>commons-dbcp</groupId>
						<artifactId>commons-dbcp</artifactId>
						<version>1.4</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											properties-maven-plugin
										</artifactId>
										<versionRange>
											[1.0-alpha-1,)
										</versionRange>
										<goals>
											<goal>
												read-project-properties
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<repositories>
		<repository>
			<!-- Needed for com.sleepycat:je:3.374 -->
			<id>spring-plugins</id>
			<name>Spring Plugins</name>
			<url>http://repo.spring.io/plugins-release/</url>
		</repository>
		<repository>
			<id>builds-archive-org</id>
			<name>builds-archive-org</name>
			<url>http://builds.archive.org:8080/maven2</url>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>com.sun.jmx</groupId>
			<artifactId>jmxri</artifactId>
			<version>1.2.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.3.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.webcurator</groupId>
			<artifactId>webcurator-core</artifactId>
			<version>3.0.0-SNAPSHOT</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.netarchivesuite</groupId>
			<artifactId>heritrix3-wrapper</artifactId>
			<version>1.0.3</version>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
				</exclusion>
				<exclusion>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>log4j-over-slf4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>
</project>
